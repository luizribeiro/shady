WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
COMMENT = _{ single_line_comment | multiline_comment }
single_line_comment = _{ "#" ~ (!(NEWLINE) ~ ANY)* }
multiline_comment = _{ "/*" ~ (!("*/") ~ ANY)* ~ "*/"}

program = { SOI ~ (fn_definition ~ ";")* ~ EOI }

token = @{ (ASCII_ALPHA | "_" | "-")+ }

public = @{ "public" }
infix = @{ "infix" }
fn_name = @{ token }
parameter = { variable ~ (":" ~ typ)? }
typ = _{ type_int | type_str }
type_int = @{ "int" }
type_str = @{ "str" }

fn_definition = {
  public?
  ~ (
    (!infix ~ fn_name ~ parameter*) |
    (infix ~ fn_name ~ parameter{2})
  )
  ~ "=" ~ expr
}

call = { fn_name ~ fn_arg* }
fn_arg = _{ unquoted_str_arg | expr }
unquoted_str_arg = @{ (ASCII_ALPHANUMERIC | "-")+ }

block = { "{" ~ (expr ~ ";")* ~ "}" }

expr = {
  (prefix_op* ~ primary
  ~ (infix_op ~ prefix_op* ~ primary)*)
  | call
  | block
}
primary = _{ variable | value | "(" ~ expr ~ ")" }
variable = @{ "$" ~ token }
value = _{ int | str }

infix_op =  _{ math_infix_op | bool_infix_op | custom_infix_op }
custom_infix_op = @{ ("`" ~ token ~ "`") }
bool_infix_op = @{ "==" | "!=" | "<" | ">" | "<=" | ">=" }
math_infix_op = _{ add | sub | mul | div | mod | pow }
add = @{ "+" }
sub = @{ "-" }
mul = @{ "*" }
div = @{ "/" }
mod = @{ "%" }
pow = @{ "^" }

prefix_op = @{ "!" | "-" }

int = @{ ASCII_NONZERO_DIGIT ~ ASCII_DIGIT+ | ASCII_DIGIT }

str = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}
